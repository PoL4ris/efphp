{
  "name": "Efphp",
  "tagline": "Fast and easy tool for php developments",
  "body": "# ephp #\r\n\r\n\r\n## EasyPhp documentaci&oacute;n ##\r\n\r\nEasyPhp es una herramienta creada para el r&aacute;pido desarrollo de aplicaciones php orientadas a soluciones a la medida.\r\n\r\n### Setup ###\r\n\r\nLa configuraci&oacute;n general de base de datos y rutas se adaptar&aacute; en\r\n\r\n> /lib/Configuracion.php\r\n\r\nAntes de comenzar a crear tablas es necesario ejecutar cuando menos una vez en un explorador el administrador\r\nel cual utilizará\r\n\r\n>/lib/Wizard.php\r\n\r\npara crear las tablas base.\r\n\r\n###### Accesos default\r\n\r\nEl usuario y contraseña default para poder entrar al administrador serán\r\n\r\n><ul><li><strong>Usuario</strong>:admin@efphp.</li><li><strong>Contraseña</strong>:admin</li></ul>\r\n\r\n\r\n##### Módulos default\r\n\r\nComo default se generan las siguientes tablas\r\n\r\n><ul>\r\n    <li><strong>admin</strong>: Contiene el usuario base ADMINISTRADOR, almacenará futuros usuarios.</li>\r\n    <li><strong>rol</strong>: Contiene el rol base ADMINISTRADOR, almacenará futuros roles. </li>\r\n    <li><strong>cms</strong>: Contiene un ejemplo de contenido html el cual es mostrado en el frontend /BASEURL/index.php en el explorador</li>\r\n    <li><strong>menu</strong>: Contiene el menú raiz de donde heredarán todos los menús además de \"home\" el cual podrá visualizarse en el menú de /BASEURL/index.php en el explorador</li>\r\n    <li><strong>log</strong>: Almacena todas las actividades que se realizen por parte de cualquier usuario, login, intento (satisfactorio o fallido) de abc.</li>\r\n</ul>\r\n\r\n##### Creación de tablas custom\r\n\r\nEl primer requisito para implementar la herramienta es el modelo de la base de datos.\r\nLa base de datos deberá seguir la siguientes reglas\r\n\r\n> 1. Las llaves primarias deber&aacute;n llamarse \"id\"\r\n> 2. Las llaves foraneas deber&aacute;n llamarse \"id_tablaQueRelaciona\"\r\n> 3. Deber&aacute; tener la columna \"nombre\" cada tabla que sea relacionada\r\n> e.g.\r\n\r\n>\t<table>\r\n\t\t<tr>\r\n\t\t\t<td><strong>administrador</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>id:int(11)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>id_rol:int(11)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>nombre:varchar(255)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>usuario:varchar(255)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>password:varchar(255)</td>\r\n\t\t</tr>\r\n\t</table>\r\n\t<table>\r\n\t\t<tr>\r\n\t\t\t<td><strong>rol</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>id:int(11)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>nombre:varchar(255)</td>\r\n\t\t</tr>\r\n\t</table>\r\n\r\n\r\n##### Tipos de datos para backend\r\n\r\nLos tipos de datos y nombre de las columnas así como sus comentarios hacen que se comporten de manera distinta en el admin.\r\n\r\n><table>\r\n    <thead>\r\n        <tr><th>Nomenclatura</th><th>Tipo de dato</td><th>Resultado</th></tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td> <strong>id</strong></td>\r\n            <td> int </td>\r\n            <td>\r\n                <ul>\r\n                    <li>Editor: No genera input</li>\r\n                    <li>Grid: Genera botón para ver el detalle del registro</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td> <strong>id_</strong>llaveforanea </td>\r\n            <td> int </td>\r\n            <td>\r\n                <ul>\r\n                    <li>Editor: Genera un dropdown con un join dinámico a la tabla relacionada mostrando la columna nombre de la tabla foránea</li>\r\n                    <li>Grid: Genera un join dinámico que muestra la relación entre la tabla y la tabla relacionada mostrando la columna nombre de la tabla foránea</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td> <strong>cms_</strong>nombrecolumna </td>\r\n            <td> text </td>\r\n            <td>\r\n                <ul>\r\n                    <li>Editor: Genera un input con un editor WYSIWYG, acepta html, css, javascript </li>\r\n                    <li>Grid: Muestra botón que lleva al preview del texto</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td> nombrecolumna </td>\r\n            <td> date </td>\r\n            <td>\r\n                <ul>\r\n                    <li>Editor: Genera un calendario dinámico que es mostrado cuando se da click en el input </li>\r\n                    <li>Grid: Muestra el valor de la columna guardado sin alteración</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td> <strong>img_</strong>nombrecolumna </td>\r\n            <td> varchar(255) </td>\r\n            <td>\r\n                <ul>\r\n                    <li>Editor: Genera un input de tipo file el cual recibe extensiones [.png, .jpg, .gif] y guarda los archivos en /media/img/ </li>\r\n                    <li>Grid: Muestra el nombre del archivo</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td> <strong>bool_</strong>nombrecolumna </td>\r\n            <td>  tinyint(1) </td>\r\n            <td>\r\n                <ul>\r\n                    <li>Editor: Genera un dropdown con opción sí y no [0 = no, 2 = sí] </li>\r\n                    <li>Grid: Muestra ícono check o cross dependiendo el valor</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td> <strong>status_</strong>nombrecolumna </td>\r\n            <td> tinyint(1) </td>\r\n            <td>\r\n                <ul>\r\n                    <li>Editor: Genera un dropdown con opción sí, no y pendiente [0 = no, 1 = pendiente, 2 = sí] </li>\r\n                    <li>Grid: Muestra ícono check, cross o admiración dependiendo el valor</li>\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n\r\nCada columna de la tabla puede tener un comentario el cual hará que funcione de la siguiente manera.\r\n\r\n>'Etiqueta para mostrar en formularios-Tipo de validación-Tipo de servicio'\r\n\r\ne.g.\r\n\r\n> [Título-tel-normal]\r\n\r\nEsto tendrá como resultado mostrar en el administrador la etiqueta en el input sustuyendo el nombre de la columna por \"Título\", el valor será validado como teléfono.\r\n(El tercer parámetro está en desarrollo)\r\n\r\nPara agregar tipos de validación se puede modificar/agregar en\r\n\r\n> /js/lib.js:validator.validator(type, val, selector)\r\n\r\nUn ejemplo de creación de tabla con estas características:\r\n\r\n>$table = \"CREATE TABLE `cms` (\r\n           `id` int(11) NOT NULL AUTO_INCREMENT,\r\n           `nombre` varchar(255) DEFAULT NULL COMMENT 'Título-text',\r\n           `tag` varchar(255) NOT NULL COMMENT 'Tag-text',\r\n           `cms_contenido` text  NOT NULL COMMENT 'Contenido CMS-text',\r\n           PRIMARY KEY (`id`)\r\n         ) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8\";\r\n\r\n\r\n### Implementaci&oacute;n Frontend###\r\n\r\nUna vez configurado el proyecto se podr&aacute; acceder como usuario a \r\n\r\n> BASEURL/index.php\r\n\r\nToda secci&oacute;n que se quiera agregar al usuario se localizar&aacute; en \r\n\r\n> /vistas\r\n e.g. /vistas/contacto.php\r\n\r\nY podrá ser invocada mediante la siguiente ruta\r\n\r\n> BASEURL/?s=contacto\r\n\r\n#### Contenido ####\r\n\r\nEl contenido puede ser html puro o pueden utilizarse placeholers para que invoque bloques desde la base de datos mostrando el resultado de la tabla `cms`.\r\n\r\nPara poder hacer esto es necesario crear un nuevo registro en el backend de cms. La columna tag será el identificador para poderlo mostrar en el frontend.\r\n\r\n>e.g. tag:contacto\r\n\r\nla utilización sería de la siguiente manera\r\n\r\n>en /vistas/contacto.php se podrá poner cualquier contenido HTML y en donde se desee mostrar el contenido del cms se tendrá que utilizar la siguiente nomenclatura {{tag}} el cual será igual al nombre del tag teniendo como resultado {{contacto}}.\r\n\r\n#### Menú ####\r\n\r\nEl menú podrá administrarse desde el backend y podrá tener herencia anidada infinita tomando como padre id_menú.\r\nSi se utiliza \"Main_Category\" como padre se mostrará en el menú principal superior y esta será (o no) padre de otras y así sucesivamente.\r\nLa url será idéntica a como se quiera utilizar\r\n\r\n> ?s=contacto\r\n\r\n\r\n#### javascript ####\r\n\r\nLa funcionalidad javascript est&aacute; deber&aacute; codificarse dentro de\r\n\r\n> /js/vistas.js\r\n\r\nTeniendo dos funcionalidades\r\n\r\n> global : function(){}\r\n\r\nAqu&iacute; se condificar&aacute; todas las acciones generales del sitio.\r\n\r\nSe deber&aacute;n agregar funciones extras con el nombre de la vista que se quiera ejecutar en particular para todas las funciones que NO sean globales\r\n\r\n> e.g.\r\n  global : function(){},\r\n  contacto : function(){ alert(\"Yo soy el contacto\")}\r\n\r\n#### css ####\r\n\r\nTodos los estilos del sitio deber&aacute;n estar situados en \r\n\r\n> /css/style.css\r\n\r\n## Avanzado ##\r\n\r\n#### php ####\r\n\r\nTodas las clases deber&aacute;n nombrarse con el mismo nombre del archivo en may&uacute;sculas y podr&aacute;n ser ejecutadas con un controlador gen&eacute;rico de la siguiente manera\r\n\r\n> /lib/Execute.php?e=ClaseParaEjecutar/metodoParaEjecutar\r\n\r\nPudiendo agregar como parametro \r\n\r\n> /lib/Execute.php?e=ClaseParaEjecutar/metodoParaEjecutar/parametro1/parametro2&back=1\r\n\r\nesto se convertirá en una llamada similar a\r\n\r\n> ObjetoClaseParaEjecutar->metodoParaEjecutar(parametro1,parametro2);\r\n\r\nPara cuando se requiere regresar de manera autom&aacute;tica a la p&aacute;gina que invoca el servicio (utilizando back=1)\r\n\r\n### Implementaci&oacute;n Administrador ###\r\n\r\nEl administrador deber&aacute; ser previamente configurado de la siguiente manera\r\n\r\n> /admin/config/menu.xml\r\n\r\nContiene la estructura de men&uacute; necesaria para cada rol de cada usuario administrador (v&eacute;ase archivo menu.xml)\r\n\r\nLa notaci&oacute;n para generar m&oacute;dulos dentro del administrador ser&aacute; de la siguiente manera\r\n\r\n> subitemLink: ?s=tabla-admin\r\n\r\nLa cual generar&aacute; un administrador de altas bajas y cambios para la tabla seleccionada",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}