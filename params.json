{
  "name": "Efphp",
  "tagline": "Fast and easy tool for php developments",
  "body": "# ephp #\r\n\r\n\r\n## EasyPhp documentaci&oacute;n ##\r\n\r\nEasyPhp es una herramienta orientada al r&aacute;pido desarrollo de aplicaciones php orientadas a peque&ntilde;os negocios y sistemas de baja disponibilidad.\r\n\r\n### Setup ###\r\n\r\nEl primer requisito para implementar la herramienta es el modelo de la base de datos.\r\nLa base de datos deberá seguir la siguientes reglas\r\n\r\n> 1. Las llaves primarias deber&aacute;n llamarse \"id\"\r\n> 2. Las llaves foraneas deber&aacute;n llamarse \"id_tablaQueRelaciona\"\r\n> 3. Deber&aacute; tener la columna \"nombre\" cada tabla que sea relacionada\r\n> e.g.\r\n\r\n>\t<table>\r\n\t\t<tr>\r\n\t\t\t<td><strong>administrador</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>id:int(11)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>id_rol:int(11)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>nombre:varchar(255)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>usuario:varchar(255)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>password:varchar(255)</td>\r\n\t\t</tr>\r\n\t</table>\r\n\t<table>\r\n\t\t<tr>\r\n\t\t\t<td><strong>rol</strong></td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>id:int(11)</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>nombre:varchar(255)</td>\r\n\t\t</tr>\r\n\t</table>\r\n\r\n\r\nLa configuraci&oacute;n general de base de datos y rutas se adaptar&aacute; en\r\n\r\n> /lib/Configuracion.php\r\n\r\n\t\r\n### Implementaci&oacute;n Frontend###\r\n\r\nUna vez configurado el proyecto se podr&aacute; acceder como usuario a \r\n\r\n> BASEURL/index.php\r\n\r\nToda secci&oacute;n que se quiera agregar al usuario se localizar&aacute; en \r\n\r\n> /vistas\r\n e.g. /vistas/contacto.php\r\n\r\nY podrá ser invocada mediante la siguiente ruta\r\n\r\n> BASEURL/?s=contacto\r\n\r\n#### javascript ####\r\n\r\nLa funcionalidad javascript est&aacute; deber&aacute; codificarse dentro de\r\n\r\n> /js/vistas.js\r\n\r\nTeniendo dos funcionalidades\r\n\r\n> global : function(){}\r\n\r\nAqu&iacute; se condificar&aacute; todas las acciones generales del sitio.\r\n\r\nSe deber&aacute;n agregar funciones extras con el nombre de la vista que se quiera ejecutar en particular para todas las funciones que NO sean globales\r\n\r\n> e.g.\r\n  global : function(){},\r\n  contacto : function(){ alert(\"Yo soy el contacto\")}\r\n\r\n#### css ####\r\n\r\nTodos los estilos del sitio deber&aacute;n estar situados en \r\n\r\n> /css/style.css\r\n\r\n#### php ####\r\n\r\nTodas las clases deber&aacute;n nombrarse con el mismo nombre del archivo en may&uacute;sculas y podr&aacute;n ser ejecutadas con un controlador gen&eacute;rico de la siguiente manera\r\n\r\n> /lib/Execute.php?e=ClaseParaEjecutar/metodoParaEjecutar\r\n\r\nPudiendo agregar como parametro \r\n\r\n> /lib/Execute.php?e=ClaseParaEjecutar/metodoParaEjecutar&back=1\r\n\r\nPara cuando se requiere regresar de manera autom&aacute;tica a la p&aacute;gina que invoca el servicio\r\n\r\n### Implementaci&oacute;n Administrador ###\r\n\r\nEl administrador deber&aacute; ser previamente configurado de la siguiente manera\r\n\r\n> /admin/config/menu.xml\r\n\r\nContiene la estructura de men&uacute; necesaria para cada rol de cada usuario administrador (v&eacute;ase archivo menu.xml)\r\n\r\nLa notaci&oacute;n para generar m&oacute;dulos dentro del administrador ser&aacute; de la siguiente manera\r\n\r\n> subitemLink: ?s=tabla-admin\r\n\r\nLa cual generar&aacute; un administrador de altas bajas y cambios para la tabla seleccionada\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}